scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(0,50))
View(shrub)
stand2 <- stand1 |> mutate(wt = ifelse(rownames(stand1) %in% stumps1, 0,wt))
stumps1
rownames(stand1)
rownames(stand1) %in% stumps1
stumps1 <- sample(row.names(stand1),size = 20,prob = stand1$wt)
stand2 <- stand1 |> mutate(wt = ifelse(rownames(stand1) %in% stumps1, 0,wt))
stumps2 <- sample(row.names(stand2),size = 20,prob = stand2$wt)
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x)
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x)
rownames(stumps2)
stumps2 <- sample(row.names(stand2),size = 20,prob = stand2$wt)
stumps1 <- sample(row.names(stand1),size = 20,prob = stand1$wt)
stand2 <- stand1 |> mutate(wt = ifelse(rownames(stand1) %in% stumps1, 0,wt))
stumps2 <- sample(row.names(stand2),size = 20,prob = stand2$wt)
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x)
stumps2
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x)
stumps1$x
stumps1
sample1 <- sample(row.names(stand1),size = 20,prob = stand1$wt)
stand2 <- stand1 |> mutate(wt = ifelse(rownames(stand1) %in% sample1, 0,wt))
sample2 <- sample(row.names(stand2),size = 20,prob = stand2$wt)
stumps1 <- stand1[sample1,]
stumps2 <- stand1[sample2,]
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x)
stumps2a <- data.frame(id=rownames(stumps2), xp=stumps2$x)
trees <- merge(stumps1, tree) |> mutate(xn = x+xp)
trees <- merge(stumps1, tree)
View(trees)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp)
shrubs <- merge(stumps2a, shrub) |> mutate(xn = x+xp)
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(x,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(0,50))
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(0,50))
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(-5,55))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(0,50))
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(-10,60))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(0,50))
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
make_hex_stand <- function(hects=1, minsize=1){
#scale larger
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
f= 3
mx1 <- merge(x*f,z*f) |> as.data.frame() |> mutate(x = ifelse(floor(z/2)==z/2, x-f*0.5,x), z = round(z*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & z <= 100*hects)
f = pref^2
mx2 <- merge(x*f,z*f) |> as.data.frame() |> mutate(x = ifelse(floor(z/2)==z/2, x-f*0.5,x), z = round(z*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & z <= 100*hects)
f = pref^3
mx3 <- merge(x*f,z*f) |> as.data.frame() |> mutate(x = ifelse(floor(z/2)==z/2, x-f*0.5,x), z = round(z*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & z <= 100*hects)
mm <- rbind(m,mx1,mx2,mx3) |> group_by(x,z) |> summarise(wt=max(wt)) |> as.data.frame()
mm <- mm |> mutate(x = x*minsize, z = z*minsize)
rownames(mm) <- 1:nrow(mm) |> as.numeric()
return(mm)
}
stand <- make_hex_stand(0.5,1)
hects=1, minsize=1
hects=1
minsize=1
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
z
m
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
round(z*(3^0.5)/2,2)
floor(z/2)==z/2
ifelse(floor(z/2)==z/2, x-0.5,x)
z = round(z*(3^0.5)/2,2)
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
round(z*(3^0.5)/2,2)
ifelse(floor(z/2)==z/2, x-0.5,x)
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
m
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
rlang::last_trace()
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
#scale larger
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
View(m)
merge(x,z)
x = (1:(100*hects))
hects=1
minsize=1
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x=x,z=z) |> as.data.frame()
x = (1:(100*hects))
z = (1:(116*hects))
set.seed(42)
m <- merge(x,z) |> as.data.frame()
colnames(m) <- c('x','z')
m <- m |> mutate(x = ifelse(floor(z/2)==z/2, x-0.5,x), z = round(z*(3^0.5)/2,2), wt=1)
f= 3
mx1 <- merge(x*f,z*f) |> as.data.frame() |> mutate(x = ifelse(floor(z/2)==z/2, x-f*0.5,x), z = round(z*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & z <= 100*hects)
x = (1:(100*hects))
y = (1:(116*hects))
set.seed(42)
m <- merge(x,y) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(y/2)==y/2, x-0.5,x), y = round(y*(3^0.5)/2,2), wt=1)
f= 3
mx1 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^2
pref=3
pref^2
pref^1
x = (1:(100*hects))
y = (1:(116*hects))
set.seed(42)
m <- merge(x,y) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(y/2)==y/2, x-0.5,x), y = round(y*(3^0.5)/2,2), wt=1)
pref=3
f= pref^1
mx1 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^2
mx2 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^3
mx3 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
mm <- rbind(m,mx1,mx2,mx3) |> group_by(x,y) |> summarise(wt=max(wt)) |> as.data.frame()
mm <- mm |> mutate(x = x*minsize, y = y*minsize)
make_hex_stand <- function(hects=1, minsize=1){
#scale larger
x = (1:(100*hects))
y = (1:(116*hects))
set.seed(42)
m <- merge(x,y) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(y/2)==y/2, x-0.5,x), y = round(y*(3^0.5)/2,2), wt=1)
pref=3
f= pref^1
mx1 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^2
mx2 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^3
mx3 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
mm <- rbind(m,mx1,mx2,mx3) |> group_by(x,y) |> summarise(wt=max(wt)) |> as.data.frame()
mm <- mm |> mutate(x = x*minsize, y = y*minsize)
rownames(mm) <- 1:nrow(mm) |> as.numeric()
return(mm)
}
stand <- make_hex_stand(0.5,1)
stand1 <- subset(stand, y >= 20 & y < 30)
stumps <- stand1[sample(row.names(stand1),size = 50,prob = stand1$wt),]
ggplot(stand, aes(x,y))+
geom_point(data=stand, aes(x,y,size=wt), color='white')+
geom_point(data=stand1, aes(x,y), color='pink', size=0.5) +
geom_point(data=stumps, aes(x,y), color='black', size=0.5)+
coord_fixed(ratio = 1)
make_hex_stand <- function(hects=1, minsize=1){
#scale larger
x = (1:(100*hects))
y = (1:(116*hects))
set.seed(42)
m <- merge(x,y) |> as.data.frame()
m <- m |> mutate(x = ifelse(floor(y/2)==y/2, x-0.5,x), y = round(y*(3^0.5)/2,2), wt=1)
pref=3
f= pref^1
mx1 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^2
mx2 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
f = pref^3
mx3 <- merge(x*f,y*f) |> as.data.frame() |> mutate(x = ifelse(floor(y/2)==y/2, x-f*0.5,x), y = round(y*(3^0.5)/2,2), wt=f^2)  |> subset(x <=100*hects & y <= 100*hects)
mm <- rbind(m,mx1,mx2,mx3) |> group_by(x,y) |> summarise(wt=max(wt)) |> as.data.frame()
mm <- mm |> mutate(x = x*minsize, y = y*minsize)
colnames(mm) <- c('x','z','wt')
rownames(mm) <- 1:nrow(mm) |> as.numeric()
return(mm)
}
ggplot()+
geom_point(data=stand, aes(x,z,size=wt), color='white')+
geom_point(data=stand1, aes(x,z), color='pink', size=0.5) +
geom_point(data=stumps, aes(x,z), color='black', size=0.5)+
coord_fixed(ratio = 1)
stand <- make_hex_stand(0.5,1)
stand1 <- subset(stand, z >= 20 & z < 30)
stumps <- stand1[sample(row.names(stand1),size = 50,prob = stand1$wt),]
ggplot()+
geom_point(data=stand, aes(x=x,y=z,size=wt), color='white')+
geom_point(data=stand1, aes(x=x,y=z), color='pink', size=0.5) +
geom_point(data=stumps, aes(x=x,y=z), color='black', size=0.5)+
coord_fixed(ratio = 1)
ree <- make_B_tree(ht.max=20,ht.min=7.5,crwd = 5,dbh = 30)
make_B_tree <- function(ht.max, ht.min,crwd,dbh){
crown <- blob |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_shrub <- function(ht.max, ht.min,crwd){
crown <- blob |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- sticks |> mutate(x=x*crwd*0.8, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_palm <- function(ht.max, ht.min,crwd,dbh){
crown <- palm |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_N_tree <- function(ht.max, ht.min,crwd,dbh){
crown <- triangle |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
tree <- make_B_tree(ht.max=20,ht.min=7.5,crwd = 5,dbh = 30)
blob <- read.csv('blob.csv') |> data.frame(name='blob', fill='green', color='darkgreen')
palm <- read.csv('palm.csv') |> data.frame(name='palm', fill='green', color='darkgreen')|> mutate(x=round(x,2),y=round(y,2))
trunk <- read.csv('trunk.csv') |> data.frame(name='trunk', fill='orange', color='brown')|> mutate(x=round(x,2),y=round(y,2))
triangle <- data.frame(x=c(-0.5, 0, 0.5),y=c(0, 1, 0), name='triangle', fill='green', color='darkgreen')
dome <- data.frame(x=c(-1,
-0.9,
-0.75,
-0.5,
-0.25,
0,
0.25,
0.5,
0.75,
0.9,
1)/2,
y=(c(0,
0.5,
0.7,
0.9,
0.95,
1.00,
0.95,
0.9,
0.7,
0.5,
0)), name='dome')
sticks <- data.frame(x=c(-0.075,-0.13,-0.12,-0.025,-0.005,0.005,0.025,0.12,0.13,0.075),y=c(0,1,1,0,1,1,0,1,1,0), name='sticks', fill='orange', color='brown')
grass <- data.frame(x=c(-0.3, -0.5, -0.1,  0.0,  0.1,  0.5,  0.3), y=c(0,0.85,0,1,0,0.85,0), name='grass', fill='green', color='darkgreen')
forb <- data.frame(x=c(-0.04, -0.04, -0.32, -0.38, -0.45, -0.50, -0.45, -0.38, -0.32, -0.04, -0.04, -0.13, -0.12,  0.00,  0.10,  0.12,  0.03,  0.04,  0.29,  0.34,  0.44,  0.50,  0.43,  0.34,  0.30, 0.04, 0.05, -0.04),
y=c(0, 0.39, 0.57, 0.52, 0.52, 0.61, 0.7, 0.7, 0.61, 0.45, 0.78, 0.82, 0.95, 1, 0.95, 0.82, 0.78, 0.45, 0.68, 0.76, 0.77, 0.68, 0.59, 0.59, 0.63, 0.39, 0, 0), name='forb', fill='green', color='darkgreen')
fern <- data.frame(x=c(-0.09, -0.12, -0.16, -0.22, -0.31, -0.50, -0.28, -0.12, -0.15, -0.10, -0.06, -0.06, -0.13, -0.05, -0.01,  0.06,  0.02,  0.00,  0.03, -0.05, -0.04,  0.02,  0.10,  0.09,  0.24, 0.50,  0.27,  0.17,  0.11,  0.03, -0.03, -0.09),
y=c(0, 0.13, 0.2, 0.1, 0.29, 0.41, 0.43, 0.32, 0.24, 0.15, 0.02, 0.38, 0.44, 0.88, 0.96, 1, 0.94, 0.85, 0.42, 0.38, 0.03, 0.16, 0.28, 0.4, 0.45, 0.44, 0.27, 0.12, 0.25, 0.13, 0, 0), name='fern', fill='green', color='darkgreen')
ggplot() +
geom_polygon(data=trunk, aes(x,y,  fill=name, color=name), alpha=0.8)
ht.max = 5
ht.min = 2
crwd = 2
dbh = 30
make_B_tree <- function(ht.max, ht.min,crwd,dbh){
crown <- blob |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_shrub <- function(ht.max, ht.min,crwd){
crown <- blob |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- sticks |> mutate(x=x*crwd*0.8, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_palm <- function(ht.max, ht.min,crwd,dbh){
crown <- palm |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
make_N_tree <- function(ht.max, ht.min,crwd,dbh){
crown <- triangle |> mutate(x=x*crwd, y=y*(ht.max-ht.min)+ht.min) #|> data.frame(id=1)
base <- trunk |> mutate(x=x*dbh/100*1.1, y=y*(ht.min)) #|> data.frame(id=2)
tree = rbind(crown, base)
return(tree)}
tree <- make_B_tree(ht.max=20,ht.min=7.5,crwd = 5,dbh = 30)
shrub <- make_shrub(ht.max=3,ht.min=1,crwd=2)
sample1 <- sample(row.names(stand1), size = 20, prob = stand1$wt)
stand2 <- stand1 |> mutate(wt = ifelse(rownames(stand1) %in% sample1, 0,wt))
sample2 <- sample(row.names(stand2), size = 20, prob = stand2$wt)
stumps1 <- stand1[sample1,]
stumps2 <- stand1[sample2,]
stumps1a <- data.frame(id=rownames(stumps1), xp=stumps1$x, z=stumps1$z)
stumps2a <- data.frame(id=rownames(stumps2), xp=stumps2$x, z=stumps2$z)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp) |> order_by(z)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp)
View(trees)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp) |> order_by(z)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp) |> arrange(z)
trees <- merge(stumps1a, tree) |> mutate(xn = x+xp) |> arrange(z)
shrubs <- merge(stumps2a, shrub) |> mutate(xn = x+xp) |> arrange(z)
ggplot() +
geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
both <- rbind(trees, shrubs)
ggplot() +
geom_polygon(data=both, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
both <- rbind(trees, shrubs)|> arrange(z)
ggplot() +
geom_polygon(data=both, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
View(both)
both <- rbind(trees, shrubs) |> arrange(-z)
ggplot() +
geom_polygon(data=both, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
both[sort(both$z),]
both <- both[sort(both$z),]
ggplot() +
geom_polygon(data=both, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
View(both)
sort(both$z)
order(both$z)
both <- rbind(trees, shrubs)
both <- both[order(both$z),]
ggplot() +
geom_polygon(data=both, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=trees, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
# geom_polygon(data=shrubs, aes(xn,y, group=paste0(name,id), fill=fill, color=color), alpha=0.8, size=0.01)+
scale_fill_manual(values=c('green','orange'))+
scale_color_manual(values=c('brown','darkgreen'))+
theme(legend.position = "none",
panel.background = element_rect(fill = rgb(0.85,0.95,1,0.5),
colour = "black",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.3)),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = rgb(0.1, 0.1, 0.1, 0.1))
)+
coord_fixed(ratio = 1)+
scale_y_continuous(trans='identity', breaks = c(-1:(120/5))*5,minor_breaks = c(-1:(120)), limits = c(0,50))+
scale_x_continuous(breaks = c(-1:(120/5))*5, minor_breaks = c(-1:(120)), limits = c(-5,55))
